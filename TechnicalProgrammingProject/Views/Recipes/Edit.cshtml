@model TechnicalProgrammingProject.Models.EditRecipeViewModel

@{
    ViewBag.Title = "Edit Recipe";
}

<h2>Edit Recipe</h2>


@using (Html.BeginForm("Edit", "Recipes", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />

        @Html.Image(Model.Image, new { @class = "img-responsive img-thumbnail" })

        @Html.HiddenFor(model => model.ID)
        @Html.HiddenFor(model => model.Image)

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" }, @cols = "50", @rows = "6" })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.CookTime, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CookTime, new { htmlAttributes = new { @min = "0", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CookTime, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Servings, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Servings, new { htmlAttributes = new { @min = "0", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Servings, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.RecipePicture, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.FileFor(model => model.RecipePicture)
                @Html.ValidationMessageFor(model => model.RecipePicture, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Directions, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Directions, new { htmlAttributes = new { @class = "form-control" }, @cols = "50", @rows = "6" })
                @Html.ValidationMessageFor(model => model.Directions, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Ingredients, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <div id="ingredients">
                    @Html.EditorForMany(model => Model.Ingredients)
                </div>
            </div>

            <div class="col-md-10 add">
                <button type="button" id="add-ingredient" class="btn btn-default">
                    <span class="glyphicon glyphicon-plus" aria-hidden="true"></span>
                </button>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $(document).ready(function () {
            $('#add-ingredient').click(function () {
                $.ajax({
                    url: '@Url.Action("AddIngredient")',
                    cache: false,
                    method: 'GET',
                    success: function (html) {
                        $('#ingredients').append(html);
                    }
                })
            });

            $('#ingredients').on('click', 'button.delete-ingredient', function () {
                var ingredientToRemove = $(this).closest('div.ingredient');
                ingredientToRemove.prev('input[type=hidden]').remove();
                ingredientToRemove.prev('input[type=hidden]').remove();
                ingredientToRemove.remove();
            });

            $('#add-ingredient').click(function () {
                $('.add').addClass("col-md-offset-2 ");
            });
        });
    </script>
}
